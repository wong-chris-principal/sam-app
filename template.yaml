AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Environment:
      Variables:
        TABLE_NAME: my-table

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      BinaryMediaTypes: 
      - image~1png
  MyTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: my-table
  # CreateBookFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Policies:
  #       - DynamoDBCrudPolicy:
  #           TableName: !Ref MyTable
  #     CodeUri: books/
  #     Handler: app.create
  #     Runtime: nodejs14.x
  #     Events:
  #       CreateBook:
  #         Type: Api
  #         Properties:
  #           Path: /book
  #           Method: post
  ListBooksFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref MyTable
      # CodeUri: books/
      # Handler: app.list
      # Runtime: nodejs14.x
      PackageType: Image
      Events:
        ListBooks:
          Type: Api
          Properties:
            Path: /books
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
    Metadata:
      DockerTag: nodejs14.x-v1
      DockerContext: ./books
      Dockerfile: Dockerfile
  # DeleteBooksFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     Policies:
  #       - DynamoDBCrudPolicy:
  #           TableName: !Ref MyTable
  #     # CodeUri: books/
  #     # Handler: app.delete
  #     # Runtime: nodejs14.x
  #     PackageType: Image
  #     Events:
  #       ListBooks:
  #         Type: Api
  #         Properties:
  #           Path: /books/{name}
  #           Method: delete
  #   Metadata:
  #     DockerTag: nodejs14.x-v1
  #     DockerContext: ./books
  #     Dockerfile: Dockerfile
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /api-doc
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
    Metadata:
      DockerTag: nodejs14.x-v1
      DockerContext: ./api-doc
      Dockerfile: Dockerfile
  GetInvitationFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: [ "app.get" ]
      Events:
        GetInvitation:
          Type: Api
          Properties:
            Path: /invitations/{id}
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
    Metadata:
      DockerTag: nodejs14.x-get-invitations-v1
      DockerContext: ./invitations
      Dockerfile: Dockerfile
  GetInvitationsFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: [ "app.get" ]
      Events:
        GetInvitation:
          Type: Api
          Properties:
            Path: /invitations
            Method: get
            RestApiId:
              Ref: ApiGatewayApi
    Metadata:
      DockerTag: nodejs14.x-get-invitations-v1
      DockerContext: ./invitations
      Dockerfile: Dockerfile
  CreateInvitationFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      ImageConfig:
        Command: [ "app.create" ]
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /invitations
            Method: post
            RestApiId:
              Ref: ApiGatewayApi
    Metadata:
      DockerTag: nodejs14.x-create-invitations-v1 
      DockerContext: ./invitations
      Dockerfile: Dockerfile
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ListBooksApi:
    Description: "List books"
    #Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/books/"
    Value: !Sub "https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/books/"
  ListBooksFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt ListBooksFunction.Arn
  ListBooksFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ListBooksFunctionRole.Arn
