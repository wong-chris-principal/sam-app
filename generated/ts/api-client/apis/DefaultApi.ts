/* tslint:disable */
/* eslint-disable */
/**
 * e-enrollment api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    InlineResponse201,
    InlineResponse201FromJSON,
    InlineResponse201ToJSON,
} from '../models';

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Retrieve a qr code which contains the invitation url by passing in the id
     * Retrieve a qr code which contains the invitation url
     */
    async invitationsGetRaw(): Promise<runtime.ApiResponse<Blob>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/invitations`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.BlobApiResponse(response);
    }

    /**
     * Retrieve a qr code which contains the invitation url by passing in the id
     * Retrieve a qr code which contains the invitation url
     */
    async invitationsGet(): Promise<Blob> {
        const response = await this.invitationsGetRaw();
        return await response.value();
    }

    /**
     * Create a invitation.
     */
    async invitationsPostRaw(): Promise<runtime.ApiResponse<InlineResponse201>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/invitations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => InlineResponse201FromJSON(jsonValue));
    }

    /**
     * Create a invitation.
     */
    async invitationsPost(): Promise<InlineResponse201> {
        const response = await this.invitationsPostRaw();
        return await response.value();
    }

}
